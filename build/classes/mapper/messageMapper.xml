<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.lym.dao.MessageDao">
	<insert id="newMessage">
		insert into message(for_user_id,title,create_time,content,category,status)
		values(#{forUserId},#{title},#{createTime},#{content},#{category},#{status})
	</insert>
	
	<delete id="deleteMessage">
		delete from message where id = #{id}
	</delete>
	<delete id="deleteMessageByMessageId">
		delete from message where id = #{param1}
	</delete>
	
	<update id="updateMessage">
		update message set for_user_id = #{forUserId},title = #{title},create_time = #{createTime},content = #{content},
		category = #{category},status = #{status} 
		where id = #{id}
	</update>
	
	<update id="updateMessageStatus">
		update message set status = #{param2}
		where id = #{param1}
	</update>
	
	<update id="markAsReaded">
		update message set status = 'readed'
		where id = #{param1}
	</update>
	
	<update id="markUserAllReaded">
		update message set status = 'readed'
		where for_user_id = #{param1}
	</update>
	
	<select id="queryMessageById" resultType="me.lym.entity.Message">
		select * from message where id = #{param1}
	</select>
	
	<select id="queryMessagesByUserId" resultType="me.lym.entity.Message">
		select * from message where for_user_id = #{param1}
	</select>
	
	<select id="queryMessagesByUserIdAndLimit" resultType="me.lym.entity.Message">
		select * from message where for_user_id = #{param1} limit #{param2} offset #{param3}
	</select>
	
</mapper>